输入输出说明：
首先输入一个整数num，表示需要进行的操作数
接下来的num行，每行开头为一个数字

1表示复杂表达式计算，后面读入两个整数x,y，计算出+((x+y) - (-y*(-2)) + (-2*0))（实际上是x-y）的结果

2表示计算第n个斐波那契数，读入一个整数n，n<0时输出-1，n>MAX(=10)时输出-2，n在0-MAX之间时输出第n个斐波那契数的值

3表示四则运算，读入三个整数x,y,kind，kind=1,2,3,4分别表示加减乘除，输出x对y进行kind运算的结果，如果被除数为0时输出cannot div 0!!!，如果kind不在1-4之间，输出operation kind is not in [+-*/]!!!

4表示输出字母表前m个字母，读入一个整数m，输出字母表前m个字母的大小写形式，至多26个字母，m>26也只输出26个

5表示计算两个数的最大公约数，读入两个整数_a,_b，计算两个数的最大公约数

6表示输出字符串string:!#$%&'()*+,-./:;<=>?@[\]^_`{|}~，不用输入

7表示含有公共子表达式的程序，用于检测代码优化，输出2 1 1 1 1 1 2，不用输入

测试用例1：
input:
4
1 3 4 
2 4 
3 1 2 1 
4 10  
output:
expre:-1 fibo:3 operation:3 ABCDEFGHIJ abcdefghij

测试用例2：
input:
3
1 10 2 
2 -1 
5 16 10 
output:
expre:8 fibo:-1 gcd:2

测试用例3:
input:
5
1 5 5 
2 11 
3 4 5 3 
4 0
5 24 15 
output:
expre:0 fibo:-2 operation:20 gcd:3

测试用例4：
input:
6
3 1 2 1 
3 2 3 2
3 3 4 3
3 6 2 4
3 4 0 4
3 0 5 5
output:
operation:3 operation:-1 operation:12 operation:3 cannot div 0!!! operation kind is not in [+-*/]!!!

测试用例5：
input:
4
2 10
4 26
5 4 0
6
output:
fibo:55 ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz gcd:0 
string:!#$&'()*+,-./:;<=>?@[]^_`{|}~

测试用例6：
input:
1
7
output:
2 1 1 1 1 1 2