.data
_maxlen:	.word	100	#const int
_stepmask:	.word	-1	#const int
_PLUS:	.word	'+'	#const char
_TIMES:	.word	'*'	#const char
_minus:	.word	'-'	#const char
_div:	.word	'/'	#const char
_size:	.word	0	#int var
_step:	.word	0	#int var
_start:	.word	0	#int var
_end:	.word	0	#int var
_varray:	.space	400	#array of int
_op:	.word	0	#char var
__str0:	.ASCIIZ	"Size is too big!"
__str1:	.ASCIIZ	"Array generate success."
__str2:	.ASCIIZ	"Please check your letter."
__str3:	.ASCIIZ	"Please check your letter."
__str4:	.ASCIIZ	"Please check your letter."
__str5:	.ASCIIZ	"Please check your letter."
__str6:	.ASCIIZ	"------Expression Check Start------"
__str7:	.ASCIIZ	"Please input two operands and an operation (eg:5 + 2):"
__str8:	.ASCIIZ	"="
__str9:	.ASCIIZ	"ERROR:Divided by ZERO."
__str10:	.ASCIIZ	"Undefined operation:"
__str11:	.ASCIIZ	"Please select one from set {+,-,*,/}."
__str12:	.ASCIIZ	"------Expression Check Exit------"
__str13:	.ASCIIZ	"------Array Check Start------"
__str14:	.ASCIIZ	"Please input (size step(default is 1) start) of an array:"
__str15:	.ASCIIZ	"Please re-input the size of the array:"
__str16:	.ASCIIZ	"The sum of the array is:"
__str17:	.ASCIIZ	"------Array Check Exit------"
__str18:	.ASCIIZ	"------Recursive Check Start------"
__str19:	.ASCIIZ	"Please input a number and I will give you the factorial:"
__str20:	.ASCIIZ	"Please input a smaller one:"
__str21:	.ASCIIZ	"The factorial of your input is:"
__str22:	.ASCIIZ	"------Recursive Check Exit------"
__str23:	.ASCIIZ	"------Letter Check Start------"
__str24:	.ASCIIZ	"Please input a uppercase letter:"
__str25:	.ASCIIZ	"Please input a uppercase letter:"
__str26:	.ASCIIZ	"The lowercase is:"
__str27:	.ASCIIZ	"Please input a lowercase letter:"
__str28:	.ASCIIZ	"Please input a lowercase letter:"
__str29:	.ASCIIZ	"The uppercase is:"
__str30:	.ASCIIZ	"------Letter Check Exit------"
__str31:	.ASCIIZ	"--------------Check Start----------------"
__str32:	.ASCIIZ	"Content:"
__str33:	.ASCIIZ	"0.Exit"
__str34:	.ASCIIZ	"1.Expression check"
__str35:	.ASCIIZ	"2.Array check"
__str36:	.ASCIIZ	"3.Recursive check"
__str37:	.ASCIIZ	"4.Letter checkn"
__str38:	.ASCIIZ	"Please give me your choice(just number):"
__str39:	.ASCIIZ	"Wrong number:"
__str40:	.ASCIIZ	"Please give me your choice(just number):"
__str41:	.ASCIIZ	"--------------Check Exit-----------------"

.text
addi	$sp,$sp,-40
add	$fp,$sp,$0
j	main

Fact:
sub	$sp,$sp,4	#formal parameters alloc
add	$sp,$sp,-4	#local const alloc

add	$sp,$sp,-56	#alloc memory for temp var
lw	$t1,0($fp)
ori	$t2,$0,0
bne	$t1,$t2,label_0
lw	$t1,_minus
ori	$t2,$0,1000
div	$t1,$t2
mflo	$t3
sw	$t3,-4($fp)
lw	$t1,-4($fp)
ori	$t2,$0,1
sub	$t3,$t1,$t2
sw	$t3,-8($fp)
lw	$t1,_div
lw	$t2,-8($fp)
mul	$t3,$t1,$t2
sw	$t3,-12($fp)
lw	$t1,-12($fp)
lw	$t2,_PLUS
add	$t3,$t1,$t2
sw	$t3,-16($fp)
lw	$t1,-16($fp)
lw	$t2,_TIMES
sub	$t3,$t1,$t2
sw	$t3,-20($fp)
ori	$t1,$0,-1
lw	$t2,_TIMES
div	$t1,$t2
mflo	$t3
sw	$t3,-24($fp)
lw	$t1,-20($fp)
lw	$t2,-24($fp)
sub	$t3,$t1,$t2
sw	$t3,-28($fp)
ori	$t1,$0,1
sub	$t3,$0,$t1
sw	$t3,-32($fp)
lw	$t1,-32($fp)
ori	$t2,$0,2
add	$t3,$t1,$t2
sw	$t3,-36($fp)
ori	$t1,$0,47
lw	$t2,-36($fp)
mul	$t3,$t1,$t2
sw	$t3,-40($fp)
lw	$t1,-28($fp)
lw	$t2,-40($fp)
add	$t3,$t1,$t2
sw	$t3,-44($fp)
lw	$s0,-44($fp)
add	$v0,$s0,$0
jr	$ra
j	label_1
label_0:
lw	$t1,0($fp)
ori	$t2,$0,1
sub	$t3,$t1,$t2
sw	$t3,-48($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,-48($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	Fact
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-52($fp)
lw	$t1,0($fp)
lw	$t2,-52($fp)
mul	$t3,$t1,$t2
sw	$t3,-56($fp)
lw	$s0,-56($fp)
add	$v0,$s0,$0
jr	$ra
label_1:
jr	$ra
arrayGen:
add	$sp,$sp,-8	#local var alloc

add	$sp,$sp,-20	#alloc memory for temp var
lw	$t1,_size
lw	,$t2,_maxlen
ble	$t1,$t2,label_2
li	$v0,4
la	$a0,__str0
syscall
ori	$s0,$0,0
add	$v0,$s0,$0
jr	$ra
j	label_3
label_2:
ori	$s0,$0,0
sw	$s0,0($fp)
ori	$s0,$0,0
sw	$s0,-4($fp)
label_4:
lw	$t1,0($fp)
lw	,$t2,_size
bge	$t1,$t2,label_5
lw	$t1,_step
lw	$t2,0($fp)
mul	$t3,$t1,$t2
sw	$t3,-8($fp)
lw	$t1,_start
lw	$t2,-8($fp)
add	$t3,$t1,$t2
sw	$t3,-12($fp)
lw	$s0,-12($fp)
lw	$t1,0($fp)
sll	$t2,$t1,2
la	$t2,_varray($t2)
sw	$s0,($t2)
lw	$t1,0($fp)
sll	$t2,$t1,2
la	$t2,_varray($t2)
lw	$s0,($t2)
sw	$s0,-16($fp)
lw	$t1,-4($fp)
lw	$t2,-16($fp)
add	$t3,$t1,$t2
sw	$t3,-20($fp)
lw	$s0,-20($fp)
sw	$s0,-4($fp)
lw	$t1,0($fp)
ori	$t2,$0,1
add	$t3,$t1,$t2
sw	$t3,-24($fp)
lw	$s0,-24($fp)
sw	$s0,0($fp)
j	label_4
label_5:
li	$v0,4
la	$a0,__str1
syscall
lw	$s0,-4($fp)
add	$v0,$s0,$0
jr	$ra
label_3:
jr	$ra
toLower:
sub	$sp,$sp,4	#formal parameters alloc
add	$sp,$sp,-4	#local const alloc

add	$sp,$sp,-4	#alloc memory for temp var
lw	$t1,0($fp)
ori	$t2,$0,65
bge	$t1,$t2,label_6
li	$v0,4
la	$a0,__str2
syscall
j	label_9
label_6:
lw	$t1,0($fp)
ori	$t2,$0,90
ble	$t1,$t2,label_8
li	$v0,4
la	$a0,__str3
syscall
j	label_9
label_8:
lw	$t1,0($fp)
ori	$t2,$0,32
add	$t3,$t1,$t2
sw	$t3,-4($fp)
lw	$s0,-4($fp)
sw	$s0,0($fp)
label_9:
lw	$s0,0($fp)
add	$v0,$s0,$0
jr	$ra
jr	$ra
toUpper:
sub	$sp,$sp,4	#formal parameters alloc
add	$sp,$sp,-4	#local const alloc

add	$sp,$sp,-4	#alloc memory for temp var
lw	$t1,0($fp)
ori	$t2,$0,122
ble	$t1,$t2,label_10
li	$v0,4
la	$a0,__str4
syscall
j	label_13
label_10:
lw	$t1,0($fp)
ori	$t2,$0,97
bge	$t1,$t2,label_12
li	$v0,4
la	$a0,__str5
syscall
j	label_13
label_12:
lw	$t1,0($fp)
ori	$t2,$0,32
sub	$t3,$t1,$t2
sw	$t3,-4($fp)
lw	$s0,-4($fp)
sw	$s0,0($fp)
label_13:
lw	$s0,0($fp)
add	$v0,$s0,$0
jr	$ra
jr	$ra
stepSet:
sub	$sp,$sp,4	#formal parameters alloc
add	$sp,$sp,-4	#local const alloc

lw	$s0,0($fp)
sw	$s0,_step
jr	$ra
exprCheck:
add	$sp,$sp,-20	#local var alloc

add	$sp,$sp,-16	#alloc memory for temp var
li	$v0,4
la	$a0,__str6
syscall
li	$v0,4
la	$a0,__str7
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
li	$v0,12
syscall
add	$s0,$0,$v0
sw	$s0,-16($fp)
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,-4($fp)
lw	$a0,0($fp)
li	$v0,1
syscall
lw	$a0,-16($fp)
li	$v0,11
syscall
lw	$a0,-4($fp)
li	$v0,1
syscall
li	$v0,4
la	$a0,__str8
syscall
ori	$s0,$0,1
sw	$s0,-12($fp)
lw	$t1,-16($fp)
ori	$t2,$0,43
bne	$t1,$t2,label_15
lw	$t1,0($fp)
lw	$t2,-4($fp)
add	$t3,$t1,$t2
sw	$t3,-20($fp)
lw	$s0,-20($fp)
sw	$s0,-8($fp)
lw	$a0,-8($fp)
li	$v0,1
syscall
ori	$s0,$0,0
sw	$s0,-12($fp)
j	label_20
label_15:
lw	$t1,-16($fp)
ori	$t2,$0,45
bne	$t1,$t2,label_16
lw	$t1,0($fp)
lw	$t2,-4($fp)
sub	$t3,$t1,$t2
sw	$t3,-24($fp)
lw	$s0,-24($fp)
sw	$s0,-8($fp)
lw	$a0,-8($fp)
li	$v0,1
syscall
ori	$s0,$0,0
sw	$s0,-12($fp)
j	label_20
label_16:
lw	$t1,-16($fp)
ori	$t2,$0,42
bne	$t1,$t2,label_17
lw	$t1,0($fp)
lw	$t2,-4($fp)
mul	$t3,$t1,$t2
sw	$t3,-28($fp)
lw	$s0,-28($fp)
sw	$s0,-8($fp)
lw	$a0,-8($fp)
li	$v0,1
syscall
ori	$s0,$0,0
sw	$s0,-12($fp)
j	label_20
label_17:
lw	$t1,-16($fp)
ori	$t2,$0,47
bne	$t1,$t2,label_20
ori	$s0,$0,0
sw	$s0,-12($fp)
lw	$t1,-4($fp)
ori	$t2,$0,0
bne	$t1,$t2,label_19
li	$v0,4
la	$a0,__str9
syscall
j	label_20
label_19:
lw	$t1,0($fp)
lw	$t2,-4($fp)
div	$t1,$t2
mflo	$t3
sw	$t3,-32($fp)
lw	$s0,-32($fp)
sw	$s0,-8($fp)
lw	$a0,-8($fp)
li	$v0,1
syscall
label_20:
lw	$t1,-12($fp)
beq	$t1,$0,label_21
li	$v0,4
la	$a0,__str10
syscall
lw	$a0,-16($fp)
li	$v0,11
syscall
li	$v0,4
la	$a0,__str11
syscall
j	label_21
label_21:
li	$v0,4
la	$a0,__str12
syscall
jr	$ra
arrayChek:
add	$sp,$sp,-8	#local var alloc

add	$sp,$sp,-20	#alloc memory for temp var
li	$v0,4
la	$a0,__str13
syscall
li	$v0,4
la	$a0,__str14
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,_size
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,_step
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,_start
lw	$t1,_step
ori	$t2,$0,0
beq	$t1,$t2,label_23
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,_step
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	stepSet
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
j	label_24
label_23:
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
ori	$s0,$0,1
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	Fact
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-8($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,-8($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	stepSet
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
label_24:
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
add	$fp,$sp,$0
jal	arrayGen
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-12($fp)
lw	$t1,-12($fp)
ori	$t2,$0,0
bne	$t1,$t2,label_26
li	$v0,4
la	$a0,__str15
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,_size
j	label_24
label_26:
ori	$s0,$0,0
sw	$s0,0($fp)
ori	$s0,$0,0
sw	$s0,-4($fp)
label_27:
lw	$t1,0($fp)
lw	,$t2,_size
bge	$t1,$t2,label_28
lw	$t1,0($fp)
sll	$t2,$t1,2
la	$t2,_varray($t2)
lw	$s0,($t2)
sw	$s0,-16($fp)
lw	$t1,-4($fp)
lw	$t2,-16($fp)
add	$t3,$t1,$t2
sw	$t3,-20($fp)
lw	$s0,-20($fp)
sw	$s0,-4($fp)
lw	$t1,0($fp)
ori	$t2,$0,1
add	$t3,$t1,$t2
sw	$t3,-24($fp)
lw	$s0,-24($fp)
sw	$s0,0($fp)
j	label_27
label_28:
li	$v0,4
la	$a0,__str16
syscall
lw	$a0,-4($fp)
li	$v0,1
syscall
li	$v0,4
la	$a0,__str17
syscall
jr	$ra
recurCheck:
add	$sp,$sp,-4	#local var alloc

add	$sp,$sp,-4	#alloc memory for temp var
li	$v0,4
la	$a0,__str18
syscall
li	$v0,4
la	$a0,__str19
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
label_29:
ori	$t1,$0,13
lw	$t2,0($fp)
bgt	$t1,$t2,label_30
li	$v0,4
la	$a0,__str20
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
j	label_29
label_30:
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,0($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	Fact
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-4($fp)
li	$v0,4
la	$a0,__str21
syscall
lw	$a0,-4($fp)
li	$v0,1
syscall
li	$v0,4
la	$a0,__str22
syscall
jr	$ra
letterCheck:
add	$sp,$sp,-8	#local var alloc

add	$sp,$sp,-16	#alloc memory for temp var
li	$v0,4
la	$a0,__str23
syscall
li	$v0,4
la	$a0,__str24
syscall
li	$v0,12
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,0($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	toLower
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-8($fp)
lw	$s0,-8($fp)
sw	$s0,-4($fp)
label_31:
lw	$t1,0($fp)
lw	$t2,-4($fp)
bne	$t1,$t2,label_32
li	$v0,4
la	$a0,__str25
syscall
li	$v0,12
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,0($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	toLower
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-12($fp)
lw	$s0,-12($fp)
sw	$s0,-4($fp)
j	label_31
label_32:
li	$v0,4
la	$a0,__str26
syscall
lw	$a0,-4($fp)
li	$v0,11
syscall
li	$v0,4
la	$a0,__str27
syscall
li	$v0,12
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,0($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	toUpper
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-16($fp)
lw	$s0,-16($fp)
sw	$s0,-4($fp)
label_33:
lw	$t1,0($fp)
lw	$t2,-4($fp)
bne	$t1,$t2,label_34
li	$v0,4
la	$a0,__str28
syscall
li	$v0,12
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
#######real parameter pass
lw	$s0,0($fp)
sw	$s0,0($sp)


add	$fp,$sp,$0
addi	$sp,$sp,-4
jal	toUpper
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
move	$s0,$v0
sw	$s0,-20($fp)
lw	$s0,-20($fp)
sw	$s0,-4($fp)
j	label_33
label_34:
li	$v0,4
la	$a0,__str29
syscall
lw	$a0,-4($fp)
li	$v0,11
syscall
li	$v0,4
la	$a0,__str30
syscall
jr	$ra
main:
add	$sp,$sp,-4	#local var alloc

add	$sp,$sp,-4	#alloc memory for temp var
ori	$t1,$0,1
sub	$t3,$0,$t1
sw	$t3,-4($fp)
lw	$s0,-4($fp)
sw	$s0,0($fp)
li	$v0,4
la	$a0,__str31
syscall
li	$v0,4
la	$a0,__str32
syscall
li	$v0,4
la	$a0,__str33
syscall
li	$v0,4
la	$a0,__str34
syscall
li	$v0,4
la	$a0,__str35
syscall
li	$v0,4
la	$a0,__str36
syscall
li	$v0,4
la	$a0,__str37
syscall
li	$v0,4
la	$a0,__str38
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
label_35:
lw	$t1,0($fp)
ori	$t2,$0,0
beq	$t1,$t2,label_36
lw	$t1,0($fp)
ori	$t2,$0,1
bne	$t1,$t2,label_38
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
add	$fp,$sp,$0
jal	exprCheck
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
j	label_37
label_38:
lw	$t1,0($fp)
ori	$t2,$0,2
bne	$t1,$t2,label_39
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
add	$fp,$sp,$0
jal	arrayChek
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
j	label_37
label_39:
lw	$t1,0($fp)
ori	$t2,$0,3
bne	$t1,$t2,label_40
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
add	$fp,$sp,$0
jal	recurCheck
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
j	label_37
label_40:
lw	$t1,0($fp)
ori	$t2,$0,4
bne	$t1,$t2,label_41
#######save the spot
addi	$sp,$sp,-40
sw	$ra,4($sp)
sw	$fp,8($sp)
sw	$s7,12($sp)
sw	$s6,16($sp)
sw	$s5,20($sp)
sw	$s4,24($sp)
sw	$s3,28($sp)
sw	$s2,32($sp)
sw	$s1,36($sp)
sw	$s0,40($sp)
add	$fp,$sp,$0
jal	letterCheck
nop
#######restore the spot
addi	$sp,$fp,40
lw	$ra,-36($sp)
lw	$fp,-32($sp)
lw	$s7,-28($sp)
lw	$s6,-24($sp)
lw	$s5,-20($sp)
lw	$s4,-16($sp)
lw	$s3,-12($sp)
lw	$s2,-8($sp)
lw	$s1,-4($sp)
lw	$s0,0($sp)
j	label_37
label_41:
li	$v0,4
la	$a0,__str39
syscall
lw	$a0,0($fp)
li	$v0,1
syscall
label_37:
li	$v0,4
la	$a0,__str40
syscall
li	$v0,5
syscall
add	$s0,$0,$v0
sw	$s0,0($fp)
j	label_35
label_36:
li	$v0,4
la	$a0,__str41
syscall
li	$v0,10
syscall
